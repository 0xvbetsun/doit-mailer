{
    "swagger": "2.0",
    "info": {
        "title": "DOIT Test Task Mailer API",
        "description": "REST API implementation based on the requirements described in technical specification",
        "termsOfService": "",
        "contact": {
            "email": "vlad.betcun@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "doit-task.loc",
    "basePath": "/api/v1/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Sign in  user in the system",
                "description": "Returns token and link to the avatar",
                "operationId": "apiLogin",
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Sign up user in the system",
                "description": "Returns all user data",
                "operationId": "apiRegister",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email address",
                        "required": true,
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Password",
                        "required": true,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "avatar",
                        "in": "formData",
                        "description": "Avatar image",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Operation",
                        "schema": {
                            "$ref": "#/definitions/RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/mail/github": {
            "post": {
                "tags": [
                    "Mail"
                ],
                "summary": "Emails to GitHub Users",
                "description": "Sending emails to GitHub Users by their usernames",
                "operationId": "mailGithub",
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GithubMailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "default": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "LoginRequest": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "type": "string",
                    "format": "password"
                }
            }
        },
        "GithubMailRequest": {
            "required": [
                "usernames",
                "message"
            ],
            "properties": {
                "usernames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "LoginResponse": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "avatar": {
                    "properties": {
                        "main": {
                            "type": "string"
                        },
                        "thumbnail": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "RegisterResponse": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "avatar": {
                    "properties": {
                        "main": {
                            "type": "string"
                        },
                        "thumbnail": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Error": {
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "default": {
            "type": "apiKey",
            "description": "\n           For accessing the API a valid token must be passed\n           in the desired queries. The following syntax must\n           be used in the 'Authorization' header :\n\n           Bearer: {{ token }} ",
            "name": "Authorization",
            "in": "header"
        }
    }
}